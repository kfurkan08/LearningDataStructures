using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

/*Given an array of integers, return indices of the two numbers such that they add up to a specific target.

You may assume that each input would have exactly one solution, and you may not use the same element twice.

Example:

Given nums = [2, 7, 11, 15], target = 9,

Because nums[0] + nums[1] = 2 + 7 = 9,
return [0, 1].

*/
namespace AddTwoIntAndFindTheTarget
{
    class Program
    {
        public static bool TwoSum(int[] nums, int tar)
        {
            int[] res = new int[100];
            int count = 0;
            int i, j;
            for ( i = 0; i < nums.Length; i++)
                for ( j = i; j < nums.Length; j++)
                {
                    res[count] = nums[i] + nums[j];
                    
                    if (res[count] == tar)
                    {
                        Console.Write("\n \n"+ i + "[" + nums[i] + "]" + " + " + j + "[" + nums[j] + "]" + " = " + res[count] + " is == " + tar );
                        Console.Write("\n \n Sucess Target found = ");
                        return true ;
                        
                    }
                    Console.Write("\n" + i+ "["+ nums[i] + "]" + " + " + j+ "[" + nums[j] + "]" + " = " + res[count] + " is <> "+ tar + " ->");
                    count++;
                }
            //Console.Write(nums[i] + " + " + nums[j] + " = " + res[count]);
            return false;
        }
        static void Main(string[] args)
        {
            int[] nums = new int[6] { 2, 1 ,3, 7, 11, 15 };
            int target = 9;
            Console.WriteLine(TwoSum(nums, target));
            Console.ReadKey();
        }
        
    }
}
